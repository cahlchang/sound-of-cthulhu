
  name: Electron CD

on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macOS-10.15, windows-2016, ubuntu-18.04]
 
    steps:
      - name: Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
          
      - uses: actions/checkout@v2
            
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
              ${{ runner.os }}-build-${{ env.cache-name }}-
              ${{ runner.os }}-build-
              ${{ runner.os }}-

      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: yarn install
        run: |
          yarn install
          yarn postinstall
      - name: make token files
        run: |
          echo ${{ secrets.DISCORD_TOKEN }} > src/discord_token.js
            
      - name: Build for linux
        if: matrix.os == 'ubuntu-18.04'
        run: yarn electron:build --linux

      - name: Build for macOS
        if: matrix.os == 'macOS10.15'
        run: yarn electron:build --mac
        
      - name: Build for Windows
        if: matrix.os == 'windows-2016'
        run: yarn electron:build --win
  
      - name: Cleanup artifacts
        run: |
          ls -la
          npx rimraf "dist_electron/!(sound-of-cthulhu*.exe|sound-of-cthulhu-1.0.0-mac|*.AppImage|*.dmg)"
      - name: Upload artifacts
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.os }}
          path: dist_electron
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "dist/**"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
